name: Frontend Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'safetypin-frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'safetypin-frontend/**'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./safetypin-frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './safetypin-frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:ci
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./safetypin-frontend/coverage
        flags: unittests
        fail_ci_if_error: false
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./safetypin-frontend/coverage

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    defaults:
      run:
        working-directory: ./safetypin-frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './safetypin-frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Cypress
      run: npx cypress install
    
    - name: Build application
      run: npm run build
    
    - name: Start local server
      run: npx serve -s build &
    
    - name: Run Cypress tests
      run: npx cypress run
    
    - name: Upload Cypress artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-artifacts
        path: |
          ./safetypin-frontend/cypress/videos
          ./safetypin-frontend/cypress/screenshots
        if-no-files-found: ignore

  docker-test:
    name: Docker Test Build
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build test Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./safetypin-frontend
        push: false
        load: true
        tags: safetypin-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run tests in Docker container
      run: docker run --rm safetypin-frontend:test npm run test:ci
