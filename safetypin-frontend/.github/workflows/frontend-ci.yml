name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'safetypin-frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'safetypin-frontend/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./safetypin-frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './safetypin-frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint || echo "Linting failed but continuing"
    
    - name: Run unit tests
      run: npm test -- --coverage
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./safetypin-frontend/coverage
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: ./safetypin-frontend/build

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract branch name
      shell: bash
      run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./safetypin-frontend
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/frontend:${{ env.BRANCH_NAME }}
          ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add actual deployment steps here, such as:
        # - SSH into server
        # - Pull latest Docker image
        # - Restart container
